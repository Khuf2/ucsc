public class Jarritos extends Person
{
    public Jarritos(String n, int range, int spd, int hlth, int pwr, int prio) {
        super(n, range, spd, hlth, pwr, prio);
    }

    public void attack(Enemy b) {
        format.delay(1000);
        b.setHealth(b.getHealth() - this.getPower());
        System.out.print("Jarritos spews a thick ooze for " + this.getPower() + " damage!");
        if (b.isAlive()) {
            System.out.println(" " + b.getName() + " has " + b.getHealth() + " health!");
        } else {
            System.out.println(" " + b.getName() + " has lost their pancreas and died!");
        }
    }

    public int move(int distance) {
        format.delay(1000);
        System.out.println("\nJarritos spills forward " + this.getSpeed() + " units!");
        distance -= this.getSpeed();
        return distance;
    }

    public boolean flee(Enemy b) {
        System.out.println("\n");
        format.delay(1000);
        if(this.getSpeed()>=b.getSpeed()) {
            System.out.println(this.getName() + " escaped from battle!\n");
            format.delay(1000);
            return true;
        } else {
            System.out.println(this.getName() + " was too slow to escape from battle!\n");
            format.delay(1000);
            return false;
        }
    }

    public void skill(Enemy b) {
        format.delay(1000);
        int damage = this.getPower()/2;
        int healing = damage/2;
        b.setHealth(b.getHealth() - damage);
        this.setHealth(this.getHealth()+healing);
        System.out.print("Kermit robs your 401K for " + damage + " damage!\n Kermit heals for " + healing + " health!");
        if (b.isAlive()) {
            System.out.println(" " + b.getName() + " has " + b.getHealth() + " health!");
        } else {
            System.out.println(" " + b.getName() + " has been beanboozled and died!");
        }
    }
}
